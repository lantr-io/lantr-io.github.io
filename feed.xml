<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lantr.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lantr.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-05T13:15:29+00:00</updated><id>https://lantr.io/feed.xml</id><title type="html">Lantr</title><subtitle>Lantr is a blockchain R&amp;D lab </subtitle><entry><title type="html">Cardano Voting Power Distribution</title><link href="https://lantr.io/blog/2025/Cardano-Voting-Power/" rel="alternate" type="text/html" title="Cardano Voting Power Distribution"/><published>2025-05-04T00:00:00+00:00</published><updated>2025-05-04T00:00:00+00:00</updated><id>https://lantr.io/blog/2025/Cardano-Voting-Power</id><content type="html" xml:base="https://lantr.io/blog/2025/Cardano-Voting-Power/"><![CDATA[<h2 id="cardano-voting-power-distribution">Cardano Voting Power Distribution</h2> <p>Basically, 24 DReps control 51% of the voting power in Cardano.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/notebooks/DReps.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <h2 id="delegate">Delegate</h2> <p>If you like what I’m doing, please, consider delegating your voting power to me:</p> <p>CIP-105: <a href="https://gov.tools/connected/drep_directory/drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm">drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm</a></p> <p>CIP-129: drep1y26k7hpkj26dnp8yznnsgpwu8l6pkgcdey4zd23dk655qcse26y3g</p> <p><a href="https://learncardano.io/how-to-delegate-drep-eternl-wallet-mobile/">Here is how to do that</a></p> <p>And vote for our proposals! Search LANTR.</p>]]></content><author><name>Alexander Nemish</name></author><category term="cardano,"/><category term="treasury,"/><category term="governance,"/><category term="drep"/><summary type="html"><![CDATA[Current voting power distribution in Cardano]]></summary></entry><entry><title type="html">Why Cardano Needs a Fee Market</title><link href="https://lantr.io/blog/2024/Cardano-Fee-Market/" rel="alternate" type="text/html" title="Why Cardano Needs a Fee Market"/><published>2024-11-06T00:00:00+00:00</published><updated>2024-11-06T00:00:00+00:00</updated><id>https://lantr.io/blog/2024/Cardano-Fee-Market</id><content type="html" xml:base="https://lantr.io/blog/2024/Cardano-Fee-Market/"><![CDATA[<h2 id="the-current-challenge">The Current Challenge</h2> <p>Remember the <a href="https://forum.cardano.org/t/cardano-triumphs-against-ddos-attack/134768">Cardano DDoS attack</a> in June 2024? While IOG released a quick fix, they didn’t address the fundamental issue.</p> <p>I’ve analyzed the potential cost of DDoS attacks on Cardano, and the numbers are concerning. Under current protocol parameters, the maximum transaction size is 16KB with a minimum fee (<code class="language-plaintext highlighter-rouge">minfee</code>) of 0.8 ADA. This means an attacker could potentially flood the network with 16KB transactions for approximately $7,000 per day, filling blocks and significantly degrading network performance.</p> <p>The core issue? Cardano lacks transaction prioritization. We need a fee market to allow higher-priority transactions to bypass network congestion through increased fees.</p> <p><img src="/assets/img/cardano-ddos-calculation.png" alt="Cardano DDoS attack cost calculation"/></p> <h2 id="current-transaction-ordering-system">Current Transaction Ordering System</h2> <p>An important distinction: transaction ordering isn’t part of Cardano’s consensus protocol. This means we can implement improvements without requiring a hard fork!</p> <p>Currently, transactions wait in the mempool queue and are processed first-in-first-out (FIFO), based on when relay nodes receive them. While this approach provides basic fairness and allows for backpressure during high activity, it has two significant limitations:</p> <ol> <li>No transaction prioritization</li> <li>Suboptimal script execution budgeting</li> </ol> <h3 id="the-script-execution-problem">The Script Execution Problem</h3> <p>Consider this scenario with four transactions in the queue:</p> <ol> <li>Transaction A: 70% block execution budget, 20% block size</li> <li>Transaction B: 50% block execution budget, 20% block size</li> <li>Transaction C: 30% block execution budget, 20% block size</li> <li>Transaction D: 50% block execution budget, 20% block size</li> </ol> <p>The current system would only include Transaction A in the block, as Transaction B would exceed the remaining execution budget. This creates suboptimal blocks - we recently saw this issue during a token launch.</p> <p>A more efficient approach would be to include Transactions A and C in one block, followed by B and D in the next block.</p> <h2 id="the-three-dimensional-challenge">The Three-Dimensional Challenge</h2> <p>Optimizing block creation requires balancing three key constraints:</p> <ul> <li>Block size</li> <li>CPU budget</li> <li>Memory budget</li> </ul> <p>We need a solution that optimizes block filling while:</p> <ul> <li>Maximizing fee collection</li> <li>Respecting transaction dependencies</li> <li>Maintaining fairness</li> </ul> <h2 id="our-proposal-a-flexible-fee-market">Our Proposal: A Flexible Fee Market</h2> <p>We’re proposing an alternative transaction ordering system for the Cardano node mempool, based on both transaction fees and execution budgets.</p> <h3 id="key-features">Key Features</h3> <ol> <li><strong>Flexible Configuration</strong>: Stake Pool Operators (SPOs) can choose between: <ul> <li>Current FIFO system</li> <li>New Generous-In-First-Out (GIFO) ranking system</li> </ul> </li> <li><strong>Enhanced Mempool Management</strong>: <ul> <li>Holds N transactions before implementing backpressure</li> <li>Orders a portion of transactions by fees</li> <li>Uses execution budget as a tiebreaker for equal fees</li> </ul> </li> <li><strong>Configurable Fairness Parameter</strong>: <ul> <li>100% = Pure FIFO (current system)</li> <li>0% = Full fee-based ordering</li> <li>SPOs can optimize based on their preferences</li> </ul> </li> </ol> <h3 id="expected-benefits">Expected Benefits</h3> <ul> <li>Higher throughput for priority transactions</li> <li>Natural deprioritization of resource-heavy transactions</li> <li>More efficient block utilization</li> <li>Increased rewards for all ecosystem participants</li> </ul> <p>It’s important to note that on Cardano, transaction fees go into the Rewards pot, which is then distributed between the Treasury, Stake Pool Operators (SPOs), and stakers as rewards. This means that higher fees from priority transactions don’t just help with network efficiency – they directly benefit everyone in the Cardano ecosystem by increasing rewards distribution.</p> <p><img src="/assets/img/value-preservation.png" alt="Preservation of Value" width="750"/></p> <h2 id="support-the-initiative">Support the Initiative</h2> <h3 id="vote-for-our-proposal">Vote for Our Proposal</h3> <p>Support our <a href="https://cardano.ideascale.com/c/cardano/idea/131153">Cardano Fee Market</a> proposal in Catalyst.</p> <p>Look for “LANTR” when voting on Catalyst proposals.</p> <h3 id="delegate-your-voting-power">Delegate Your Voting Power</h3> <p>Help advance Cardano’s development by delegating your voting power:</p> <p>CIP-105 DRep ID: <code class="language-plaintext highlighter-rouge">drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm</code></p> <p><a href="https://learncardano.io/how-to-delegate-drep-eternl-wallet-mobile/">Learn how to delegate using Eternl Wallet</a></p>]]></content><author><name>Alexander Nemish</name></author><category term="blockchain"/><category term="cardano"/><category term="blockchain"/><summary type="html"><![CDATA[An analysis of Cardano's transaction ordering system and a proposal for improvement]]></summary></entry><entry><title type="html">Cardano Treasury Withdrawal Strategy</title><link href="https://lantr.io/blog/2024/Cardano-Treasury/" rel="alternate" type="text/html" title="Cardano Treasury Withdrawal Strategy"/><published>2024-11-06T00:00:00+00:00</published><updated>2024-11-06T00:00:00+00:00</updated><id>https://lantr.io/blog/2024/Cardano-Treasury</id><content type="html" xml:base="https://lantr.io/blog/2024/Cardano-Treasury/"><![CDATA[<h2 id="treasury-withdrawal-strategy">Treasury Withdrawal Strategy</h2> <p>I’ve made a <a href="https://github.com/lantr-io/treasury-model/blob/main/treasury.ipynb">mathematical model</a> of the Treasury income for the next 10 years.</p> <p>Current Treasury yearly income is about 300 million ADA. In 5 years it drops down to 125 million ADA per year. And in 10 years it’s about 40 million ADA.</p> <p>My thoughts on the Treasury withdrawals as a DRep and Cardano developer:</p> <ol> <li>I don’t mind <strong>once a year withdrawals</strong>. I think @radioastro made good arguments why this is OK during Cardano Summit presentation on Governance. It’s easier to plan, to vote, to hedge against the price volatility, etc.</li> <li>I’m <strong>against</strong> the idea of <strong>random withdrawals</strong> from the current Treasury. Treasury withdrawals should be <strong>sustainable</strong>. Thus we need a <strong>strategy</strong>.</li> <li>The Treasury withdrawals <strong>should not be staked</strong>.</li> <li><strong>No voting</strong> with Treasury withdrawals</li> </ol> <h2 id="treasury-withdrawal-boundaries">Treasury Withdrawal Boundaries</h2> <p>I propose defining <strong>Treasury Withdrawal Boundaries</strong> for Cardano’s spending model. The budget would be constrained by:</p> \[Budget \in [50\%⋅TreasuryIncome, TreasuryIncome + 20\% \cdot Treasury]\] <p>This approach ensures:</p> <ul> <li>A flexible budget that adapts to Cardano’s evolving needs and market conditions</li> <li>Opportunity for Treasury growth during favorable periods</li> <li>Sustainable long-term Treasury management with built-in safeguards</li> </ul> <p>Based on current projections, this would make <strong>150M–600M ADA</strong> available for the 2025 budget.</p> <p>The parameters (50% and 20%) are adjustable based on community consensus – for example, a 70%/10% ratio could also be viable.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/notebooks/2024-Treasury.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <h2 id="why-no-staking-for-treasury-withdrawals">Why No Staking For Treasury Withdrawals</h2> <p>The Treasury withdrawals <strong>should not be staked</strong>.</p> <p>According to Cardano Shelly <a href="https://github.com/intersectmbo/cardano-ledger/releases/latest/download/shelley-ledger.pdf">specification</a>, staking rewards are taken from the Reward pot, which is filled by the Reserves and Fees pots.</p> <p><img src="/assets/img/value-preservation.png" alt="Preservation of Value" width="750"/></p> <p>When Treasury withdrawals are staked, the rewards are taken from the Rewards pot to Reward accounts. Thus less money goes to Treasury.</p> <p>This means that by staking the Treasury withdrawals we are decreasing Treasury income, essentially <strong>taking money</strong> from Treasury <strong>twice</strong>.</p> <h2 id="no-voting-with-treasury-withdrawals">No Voting With Treasury Withdrawals</h2> <p>Well, I think that’s obvious. Intersect <strong>should not vote</strong> with Treasury withdrawals.</p> <h2 id="delegate">Delegate</h2> <p>If you like what I’m doing, please, consider delegating your voting power to me:</p> <p>CIP-105: <a href="https://gov.tools/connected/drep_directory/drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm">drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm</a></p> <p>CIP-129: drep1y26k7hpkj26dnp8yznnsgpwu8l6pkgcdey4zd23dk655qcse26y3g</p> <p><a href="https://learncardano.io/how-to-delegate-drep-eternl-wallet-mobile/">Here is how to do that</a></p> <p>And vote for our Catalyst proposals! Search LANTR.</p>]]></content><author><name>Alexander Nemish</name></author><category term="cardano,"/><category term="treasury,"/><category term="governance,"/><category term="drep"/><summary type="html"><![CDATA[A sustainable strategy for Cardano Treasury withdrawals]]></summary></entry><entry><title type="html">Why Scalus, Technically?</title><link href="https://lantr.io/blog/2024/Scalus/" rel="alternate" type="text/html" title="Why Scalus, Technically?"/><published>2024-10-31T00:00:00+00:00</published><updated>2024-10-31T00:00:00+00:00</updated><id>https://lantr.io/blog/2024/Scalus</id><content type="html" xml:base="https://lantr.io/blog/2024/Scalus/"><![CDATA[<h2 id="why-scalus">Why Scalus?</h2> <p><a href="https://scalus.org">Scalus</a> is a Scala 3-based Cardano DApp development platform.</p> <p>I love Scala. I consider it the best programming language on the market.</p> <p>It’s concise to do the proof of concept implementation. Yet it’s powerful and fast so you don’t need to rewrite your PoC when the project grows. It can be used for backend, frontend, scripting, infrastructure and Cardano smart contracts. I think it’s awesome.</p> <p>With Scalus I want to give everyone the tools to do the full DApp development in Scala 3.</p> <p>Here are some pros and cons.</p> <h3 id="scala-on-backend">Scala On Backend</h3> <p>Pros:</p> <ul> <li>you can reuse domain classes and logic between Scalus smart contracts and backend. No need to define/edit those separately, risking getting bugs.</li> <li>Scalus has integration with Bloxbean <a href="https://cardano-client.dev/">Cardano Client Lib</a>, the defacto standard Cardano library on JVM for transaction building, used by many projects. It has similar API to Lucid.</li> <li>Scalus implements a <code class="language-plaintext highlighter-rouge">TransactionEvaluator</code> for Cardano Client Lib. This means you can measure the exact execution budgets and transaction fees for your transactions, without running a Cardano node or sending your transactions to other services.</li> <li>you test your smart contracts with the exact inputs/transactions that you’ll use in production. With Aiken, all your Aiken tests are disconnected from your real transactions, thus you need to test contract logic and transactions separately, with different languages. And you can’t reuse data types for Aiken contracts and your backend/frontend code.</li> <li>you could use a typesafe frameworks to define your REST API, like <a href="https://tapir.softwaremill.com/">Tapir</a></li> <li>JVM is fast. If you need some speed, JVM is still the beast.</li> <li>JVM ecosystem is immense</li> <li>compared to TypeScript you have much better language with Algebraic Data Types, pattern matching, opaque types, lazy evaluation, great composability, macros, collections, working equality, parallelism and concurrency</li> <li>compared to Rust you don’t have to deal with all those <code class="language-plaintext highlighter-rouge">Arc&lt;Mutex&lt;Box&lt;Cell&lt;'a, T + Sync + Clone&gt;&gt;&gt;&gt; mut &amp;oh::my::god</code>;</li> <li>compared to Go you have Either instead of <code class="language-plaintext highlighter-rouge">if err != nil</code></li> </ul> <p>Cons:</p> <ul> <li>Go compiles faster</li> <li>Rust app starts faster</li> </ul> <h3 id="scala-on-chain">Scala On-chain</h3> <p>Pros:</p> <ul> <li>your contracts are in your project: no separate build/test steps</li> <li>enjoy IntelliJ Idea IDE support: navigation, refactoring that just works.</li> <li>Scala Metals LSP works in VSCode and vim as well, good enough</li> <li>DEBUGGER! It works like a charm. There is nothing even remotly close to this on Cardano</li> </ul> <video controls="" width="800"> <source src="/assets/video/ScalusDemo.mp4" type="video/mp4"/> Your browser doesn't support HTML5 video </video> <ul> <li>you can reuse domain classes and logic between Scalus smart contracts and backend. No need to define/edit those separately, risking getting bugs.</li> <li>Scalus has macros that generate To/FromData instances for data types so it’s trivial to build transactions and test</li> <li>you can use Scala macros to generate and inline code</li> <li>you can use <a href="https://scalacheck.org/">ScalaCheck</a>, <a href="https://www.scalatest.org/">ScalaTest</a>, <a href="https://scalameta.org/munit/">MUnit</a> or any other existing testing libraries for your contacts tests</li> <li>you can do full end-to-end testing/debugging within the same language!</li> <li>you can manipulate generated Intermediate Representation and generated UPLC if needed: apply custom simplifications, eliminate trace logging, whatever you need – all with the same language/project.</li> <li>you can create a custom, highly optimized Plutus UPLC scripts with Scalus UPLC DSL, combining manual UPLC and UPLC from Scala expressions. That’s ultimate power.</li> </ul> <p>Cons:</p> <ul> <li>Scalus supports a strict subset of Scala 3 which requires some time to get use to: <ul> <li>you can’t use <code class="language-plaintext highlighter-rouge">while</code>, <code class="language-plaintext highlighter-rouge">for-comprehensions</code>, <code class="language-plaintext highlighter-rouge">lazy</code> and <code class="language-plaintext highlighter-rouge">try-catch-finally</code> because there is no direct translation to UPLC</li> <li>you can’t use any Scala function</li> <li>limited usage of pattern matching</li> </ul> </li> <li>Scalus standard library may lack functionality you might need. But we are working on it.</li> </ul> <h3 id="scala-on-frontend">Scala On Frontend</h3> <p>Pros:</p> <ul> <li>again, you can reuse domain classes and logic if needed</li> <li>Scalus can run your V1/V2 contracts on JavaScript, both Node.js and browser.</li> <li>Scalus can calculate execution budgets on JavaScript, both Node.js and browser.</li> <li>currently, Scalus is the only library that correctly calculates execution budgets. I’ve found bugs in both Aiken and plu-ts.</li> <li>there is Laminar framework for frontend development in Scala</li> </ul> <p>Cons:</p> <ul> <li>it’s far less common to use Scala on frontend, so less devs, less info</li> <li>the generated JS bundle is fairly large, ~1.5M</li> </ul> <h2 id="support-the-project">Support the project</h2> <p>Vote for our Catalyst proposals. Search for LANTR.</p> <p>If you like what I’m doing, please, consider delegating your voting power to me:</p> <p>CIP-105: <a href="https://gov.tools/connected/drep_directory/drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm">drep1k4h4cd5jknvcfeq5uuzqthpl7sdjxrwf9gn25tdk49qxyfhusgm</a></p> <p>CIP-129: drep1y26k7hpkj26dnp8yznnsgpwu8l6pkgcdey4zd23dk655qcse26y3g</p> <p><a href="https://learncardano.io/how-to-delegate-drep-eternl-wallet-mobile/">Here is how to do that</a></p> <p>And vote for our Catalyst proposals! Search LANTR.</p>]]></content><author><name>Alexander Nemish</name></author><category term="cardano"/><category term="scala"/><category term="scalus"/><summary type="html"><![CDATA[Why Scalus is a great choice for Cardano DApp development]]></summary></entry><entry><title type="html">Blockchain Levels</title><link href="https://lantr.io/blog/2023/Blockchain-Levels/" rel="alternate" type="text/html" title="Blockchain Levels"/><published>2023-12-20T00:00:00+00:00</published><updated>2023-12-20T00:00:00+00:00</updated><id>https://lantr.io/blog/2023/Blockchain-Levels</id><content type="html" xml:base="https://lantr.io/blog/2023/Blockchain-Levels/"><![CDATA[<h2 id="level-0---bitcoin">Level 0 - Bitcoin</h2> <p>Bitcoin is the King.</p> <p>I buy the narrative. It’s the first one. Created by a noble and mysterious anonymous genius. Who disappeared and left the project to the community. Saint Satoshi Nakamoto.</p> <p>It’s energy converted to entropy and stored in a decentralized peer-to-peer network. The digital energy, the algorithmic scarcity, the digital gold. There will be only 21 million bitcoins, 21<sup>14</sup> satoshi ever.</p> <p>Many believe that, so be it.</p> <p>Bitcoin is reasonably simple, fairly stable. No hard forks since 2013 in Bitcoin Core.</p> <p>Bitcoin is unusable as a currency with 10 minutes blocks and 7 transactions per second. It’s a store of value, not a currency.</p> <p>Bitcoin is the Level 0. The Base Layer. The Sound Money in a world of Broken Money.</p> <h2 id="level-1">Level 1</h2> <p>We need to move money faster and cheaper. We need tokens. We need smart contracts.</p> <p>Blockchain of this level still needs to be decentralized, but it doesn’t have to be Proof-of-Work.</p> <p>All it needs is a secure, trustless and decentralized 2-way bridge to Bitcoin.</p> <p>These are my criteria for Level 1 blockchain:</p> <ul> <li>Proof-of-Stake</li> <li>Secure</li> <li>Decentralized</li> <li>Stable</li> <li>Fair distribution</li> <li>Smart Contracts</li> <li>Multi-asset</li> <li>Efficient Zero-Knowledge Proofs</li> <li>Fast</li> </ul> <p>I prefer Nakamoto Consensus over Byzantine Fault Tolerance as it’s more secure and decentralized.</p> <p>I see only two options here: Ethereum and Cardano.</p> <p>Everything else is lacking in one or more of these criterias.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/token-distribution.png" sizes="95vw"/> <img src="/assets/img/token-distribution.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>I think that Cardano is just a better technology than Ethereum.</p> <ul> <li>Cardano Ouroborous liquid Proof-of-Stake is better than Ethereum’s slashing Proof-of-Stake: <ul> <li>it’s more egalitarian as validators don’t have to be rich to participate</li> <li>stake is not locked and never at risk of being slashed</li> <li>peer-reviewed with a <a href="https://eprint.iacr.org/2016/889.pdf">formal proof of security</a></li> </ul> </li> <li>Cardano’s governance is better than Ethereum’s lack of governance</li> <li>Cardano never changed its monetary policy</li> <li>Cardano’s eUTxO model is a better than account model for zero-knowledge proofs</li> <li>Cardano transactions are deterministic, no wasted gas fees</li> <li>I believe that Cardano’s limited cap of Ada is better than Ethereum’s adaptive issuance model</li> <li>Cardano Native Assets are better than Ethereum ERC20 tokens</li> <li>there are further improvements in Cardano’s roadmap.</li> </ul> <p>Cardano is Level 1.</p> <p>Mutli-asset, eUTXO, predictable fees, deterministic transactions, smart contracts, zero-knowledge primitives, 20 seconds blocks.</p> <h2 id="level-2">Level 2</h2> <p>Fast BFT chains can become Level 2 sidechains of Level 1 blockchains. This is already happening with Cardano and Hydra, Cosmos and IBC, Polkadot and parachains.</p> <p>We can build a Lightning Network or <a href="https://ark-protocol.org/">Ark Protocol</a> on top of Cardano, and it will be more secure and decentralized than Bitcoin’s Lightning Network.</p>]]></content><author><name>Alexander Nemish</name></author><category term="bitcoin"/><category term="cardano"/><summary type="html"><![CDATA[Bitcoin, Cardano, and the future of blockchains]]></summary></entry></feed>